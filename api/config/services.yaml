# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    oauth2_client_id: '%env(OAUTH2_CLIENT_ID)%'
    oauth2_secret: '%env(OAUTH2_SECRET)%'

    team_avatars_directory: '%kernel.project_dir%/public/uploads/team/avatars'
    team_avatars_public_url: '/uploads/team/avatars/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Security\OAuth2Authenticator:
        arguments:
            $decorated: '@Trikoder\Bundle\OAuth2Bundle\Security\Guard\Authenticator\OAuth2Authenticator'
            $userProvider: '@security.user.provider.concrete.app_user_provider'

    app.repository.user_repository:
        class: App\Repository\UserRepository

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # EventListeners
    App\EventListener\UserResolveListener:
        arguments:
            - '@app.repository.user_repository'
            - '@security.password_encoder'
        tags:
            - { name: kernel.event_listener, event: trikoder.oauth2.user_resolve, method: onUserResolve }

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    # Controllers
    App\Controller\AuthController:
        arguments:
            - '@app.psr.psr_http_factory'

    # Factories
    App\Factory\NormalizerFactory:
        arguments: [ !tagged app.normalizer.form_exception_normalizer ]
        public: true

    # Services
    app.psr.psr_17_factory:
        class: Nyholm\Psr7\Factory\Psr17Factory

    app.psr.psr_http_factory:
        class: Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory
        arguments:
            - '@app.psr.psr_17_factory'
            - '@app.psr.psr_17_factory'
            - '@app.psr.psr_17_factory'
            - '@app.psr.psr_17_factory'

    app.normalizer.form_exception_normalizer:
        class: App\Serializer\FormExceptionNormalizer

    App\FileUploader\FileUploader:
        arguments:
            $targetDirectory: '%team_avatars_directory%'
            $targetUrl: '%team_avatars_public_url%'
